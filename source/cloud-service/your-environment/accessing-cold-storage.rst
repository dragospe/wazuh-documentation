.. Copyright (C) 2020 Wazuh, Inc.

.. _cloud_your_environment_accessing_cold_storage:

.. meta::
  :description: Learn about acessing your environment's cold storage

Accessing cold storage
======================

The cold storage is located in an AWS S3 bucket. Using the Wazuh Cloud API, you can generate a temporary AWS token that allows you to download your data using the Amazon S3 REST API.

Next, the process of manually accessing cold storage is going to be described, but a script is provided on the `Automation of the access`_ section to make this configuration automatically. Take a look at the `Filename format`_ section to understand how your information is stored.

1. **Authentication**

In order to authenticate in the Wazuh Cloud API, you will need to sign your Cloud ID with your private key. After verifying the signature with your public key (previously shared with us), you will be authenticated in the API.

The following private keys are supported. Both must be in PEM format: 

• RSA OpenSSH:

.. code-block:: console
   
  $ ssh-keygen -t rsa -b 4096

• Elliptic curve cryptography:

.. code-block:: console
   
  $ ssh-keygen -t ecdsa -b 521

The following public keys are supported:

• .pub extension: Standard key generated by ssh-keygen

• .pem extension:

.. code-block:: console
   
  $ ssh-keygen -f key_generated.pub -e -m pem > output_key.pem

• .der extension:

.. code-block:: console
   
  $ rsa -RSAPublicKey_in -in key_generated.pem -inform PEM -outform DER -out ./output_key.der

Run the following commands to generate your signature:

.. code-block:: console
   
   $ SUBSCRIPTION_CODE="<cloud_id>"
   $ PRIVATE_KEY="./a"

Please, mind replacing ``<cloud_id>`` with your actual Cloud ID.
   
If public key is **RSA** type: 

.. code-block:: console
   
   $ x_api_key=$(echo $SUBSCRIPTION_CODE | openssl dgst -sha512 -sign $PRIVATE_KEY -sigopt rsa_padding_mode:pss -sigopt rsa_mgf1_md:sha512 | xargs --null echo 'subscription_code:' | base64 -w 0)

If public key is **ECDSA** type:

.. code-block:: console

   $ x_api_key=$(echo $SUBSCRIPTION_CODE | openssl dgst -sha512 -sign $PRIVATE_KEY | xargs --null echo 'subscription_code:' | base64 -w 0)

2. **Getting AWS token**

We use the /storage/token of the Wazuh Cloud API to get the AWS token.

Endpoint: https://api.cloud.wazuh.com/latest/storage/token

HTTP verb: POST

Body:

• subscription_code: Matching your environment's Cloud ID.

• token_expiration: Duration of the token in seconds. Between 900s and 3600s.

Headers:

• x-api-key: Signature generated in the previous step.

Request:

.. code-block:: console

   curl -d '{"token_expiration":"1800", "subscription_code":"$SUBSCRIPTION_CODE"}' -H "Content-Type: application/json" -H "x-api-key: $x_api_key" -XPOST https://api.cloud.wazuh.com/latest/storage/token/storage/token

Response:

.. code-block:: console

   {
       "subscription_code": "subscription code",
       "credentials": {
           "access_key_id": "1",
           "secret_access_key": "2",
           "session_token": "3",
           "expires_in": "3000"
       }
    }

3. **Using your AWS credentials**

Use the AWS-CLI to download your cold storage.

Create a new profile with the credentials generated by the previous request. Edit ``~/.aws/credentials``:

.. code-block:: console
   
   [wazuh_cloud_storage]
   aws_access_key_id = 1
   aws_secret_access_key = 2
   aws_session_token = 3

Then, test your credentials:

.. code-block:: console
   
   $ aws --profile wazuh_cloud_storage --region <region> s3 ls cloud-cold-<region>/<cloud_id>/

Mind replacing ``<cloud_id>`` with the environment's Cloud ID and ``<region>`` with your region.

Filename format
---------------

Cold storage files are stored according to the following format:

``wazuh-cloud-cold-<region>/<cloud_id>/<category>[/<subcategory>]/<year>/<month>/<day>``

And each file will have the following name:

``<cloud_id>_<category>[_<subcategory>]_<YYYYMMDDTHHmm>_<UniqueString>.<format>``

Where each of those fields have the following meaning:

- ``<region>``:  It is the region where the subscription is located.

- ``<cloud_id>``: Environment's Cloud ID.

- ``<category>``: Either "output" or "config".

- ``<subcategory>``: Only used by the output category, contains "alerts", "archives" or "firewall" files.
  
- ``<year>``: Year when the message was received.
  
- ``<month>``: Month when the message was received.
  
- ``<day>``: Day when the message was received.
  
- ``<YYYYMMDDTHHmm>``: Digits of the year, month, day, hour, and minute when the file was delivered. Hours are in 24-hour format and in UTC. A log file delivered at a specific time can contain records written at any point before that time.
  
- ``<UniqueString>``: The 16-character UniqueString component of the file name prevents overwriting files. It has no meaning, and log processing software should ignore it.
  
- ``<format>``: It is the encoding of the file. It could be either "json.gz", which is a JSON text file in compressed gzip format, or "tar.gz".



Automation of the access
------------------------

We provide a `script <https://wazuh-cloud-tools.s3-us-west-1.amazonaws.com/examples/wcloud-api-token.py>`_ to generate a x-api-key token.

It can be used as follows:

.. code-block::

   $ python3 wcloud-api-token.py  --subscription <cloud_id> --private_key /home/cloud/my_key

Mind replacing ``<cloud_id>`` with the environment's Cloud ID.

We also provide `another script <https://wazuh-cloud-tools.s3-us-west-1.amazonaws.com/examples/wcloud-cold-storage.py>`_ which downloads the data from S3 and auto refreshes the AWS session.

Example of use:

.. code-block::

   $ wcloud-cold-storage.py --subscription <cloud_id> --private_key /home/cloud/my_key --output_path /home/cloud/data --region <region> --start_date 2020-04-23 --end_date 2020-04-23

Mind replacing ``<cloud_id>`` with your Cloud ID, ``<region>`` with your region and fitting the rest of the arguments.
